{
  "plugin": "CanvasComponentPlugin",
  "topics": {
    "canvas.component.created": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "correlationId": { "type": "string" }
        },
        "required": ["id", "correlationId"]
      },
      "visibility": "public",
      "correlationKeys": ["correlationId"],
      "notes": "Emitted when a canvas component has been created."
    },
    "canvas.component.drag.start": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "correlationId": { "type": "string" }
        }
      },
      "visibility": "internal",
      "correlationKeys": ["correlationId"],
      "notes": "Drag start signal; useful for subscribers; no routing."
    },
    "canvas.component.drag.move": {
      "routes": [
        {
          "pluginId": "CanvasComponentDragPlugin",
          "sequenceId": "canvas-component-drag-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "position": {
            "type": "object",
            "properties": {
              "x": { "type": "number" },
              "y": { "type": "number" }
            },
            "required": ["x", "y"]
          },
          "event": { "type": "string" },
          "correlationId": { "type": "string" }
        },
        "required": ["id", "position"]
      },
      "visibility": "public",
      "correlationKeys": ["correlationId"],
      "perf": { "throttleMs": 16 },
      "notes": "Canvas component dragging movement updates; throttled to animation frame cadence."
    },
    "canvas.component.drag.end": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "position": {
            "type": "object",
            "properties": {
              "x": { "type": "number" },
              "y": { "type": "number" }
            }
          },
          "correlationId": { "type": "string" }
        }
      },
      "visibility": "public",
      "correlationKeys": ["correlationId"],
      "notes": "Drag ended; subscribers may trigger post-drag behavior (e.g., render)."
    },
    "canvas.component.selection.changed": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-selection-show-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": { "type": "string" }
        },
        "required": ["id"]
      },
      "visibility": "public",
      "notes": "Selection changed; routes to control panel selection show."
    },
    "canvas.component.import.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentImportPlugin",
          "sequenceId": "canvas-component-import-symphony"
        }
      ],
      "payloadSchema": { "type": "object" },
      "visibility": "public",
      "notes": "User initiated canvas import; routes to import sequence."
    },
    "canvas.component.import.started": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "correlationId": { "type": "string" },
          "fileName": { "type": "string" },
          "size": { "type": "number" }
        },
        "required": ["correlationId"]
      },
      "visibility": "public",
      "correlationKeys": ["correlationId"],
      "notes": "Import started; subscribers may show progress UI."
    },
    "canvas.component.import.completed": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "correlationId": { "type": "string" },
          "components": { "type": "number" }
        },
        "required": ["correlationId"]
      },
      "visibility": "public",
      "correlationKeys": ["correlationId"],
      "notes": "Import completed; subscribers may hide progress and refresh views."
    }
  },
  "definitions": {}
}
