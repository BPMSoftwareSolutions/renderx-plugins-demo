<svg viewBox="0 0 800 500" xmlns="http://www.w3.org/2000/svg" style="background-color: black;">
  <defs>
    <!-- Dark mode gradient definitions -->
    <linearGradient id="chaosGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ff6b6b;stop-opacity:0.9"/>
      <stop offset="100%" style="stop-color:#ff3838;stop-opacity:0.8"/>
    </linearGradient>
    
    <linearGradient id="sequenceGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#00d2d3;stop-opacity:0.9"/>
      <stop offset="100%" style="stop-color:#01a3a4;stop-opacity:0.9"/>
    </linearGradient>
    
    <linearGradient id="beatGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#a29bfe;stop-opacity:0.9"/>
      <stop offset="100%" style="stop-color:#6c5ce7;stop-opacity:0.9"/>
    </linearGradient>
    
    <radialGradient id="batonGlow" cx="50%" cy="50%" r="60%">
      <stop offset="0%" style="stop-color:#fdcb6e;stop-opacity:1"/>
      <stop offset="100%" style="stop-color:#e17055;stop-opacity:0.8"/>
    </radialGradient>
    
    <filter id="glow">
      <feGaussianBlur stdDeviation="4" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <filter id="strongGlow">
      <feGaussianBlur stdDeviation="6" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    
    <filter id="shadow">
      <feDropShadow dx="0" dy="4" stdDeviation="8" flood-opacity="0.6" flood-color="#000"/>
    </filter>
  </defs>
  
  <!-- Dark background -->
  <rect width="800" height="500" fill="#1e1e2e"/>
  
  <!-- Animated background particles -->
  <circle cx="100" cy="100" r="1" fill="#6c5ce7" opacity="0.6">
    <animate attributeName="cy" values="100;80;100" dur="3s" repeatCount="indefinite"/>
    <animate attributeName="opacity" values="0.6;0.3;0.6" dur="3s" repeatCount="indefinite"/>
  </circle>
  <circle cx="700" cy="150" r="1" fill="#00d2d3" opacity="0.5">
    <animate attributeName="cy" values="150;130;150" dur="4s" repeatCount="indefinite"/>
    <animate attributeName="opacity" values="0.5;0.2;0.5" dur="4s" repeatCount="indefinite"/>
  </circle>
  <circle cx="300" cy="400" r="1" fill="#fdcb6e" opacity="0.4">
    <animate attributeName="cy" values="400;380;400" dur="5s" repeatCount="indefinite"/>
    <animate attributeName="opacity" values="0.4;0.1;0.4" dur="5s" repeatCount="indefinite"/>
  </circle>
  
  <!-- Title with glow -->
  <text x="400" y="40" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="24" font-weight="bold" fill="#f8f9fa" filter="url(#glow)">
    Sequence Engine → Callback Hell
  </text>
  
  <!-- Callback Hell Section (Top) -->
  <g transform="translate(50, 80)">
    <text x="0" y="0" font-family="Inter, sans-serif" font-size="14" font-weight="600" fill="#9ca3af">BEFORE: Callback Hell</text>
    
    <!-- Chaotic web of connections -->
    <g transform="translate(0, 20)">
      <!-- Component boxes in chaos with pulse animation -->
      <rect x="0" y="20" width="80" height="40" rx="6" fill="url(#chaosGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="1;0.7;1" dur="2s" repeatCount="indefinite"/>
      </rect>
      <text x="40" y="43" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="white">Component A</text>
      
      <rect x="120" y="0" width="80" height="40" rx="6" fill="url(#chaosGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="1;0.7;1" dur="1.8s" repeatCount="indefinite"/>
      </rect>
      <text x="160" y="23" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="white">Service B</text>
      
      <rect x="240" y="35" width="80" height="40" rx="6" fill="url(#chaosGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="1;0.7;1" dur="2.2s" repeatCount="indefinite"/>
      </rect>
      <text x="280" y="58" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="white">Store C</text>
      
      <rect x="360" y="10" width="80" height="40" rx="6" fill="url(#chaosGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="1;0.7;1" dur="1.9s" repeatCount="indefinite"/>
      </rect>
      <text x="400" y="33" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="white">Effect D</text>
      
      <rect x="480" y="25" width="80" height="40" rx="6" fill="url(#chaosGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="1;0.7;1" dur="2.1s" repeatCount="indefinite"/>
      </rect>
      <text x="520" y="48" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="white">Hook E</text>
      
      <rect x="600" y="5" width="80" height="40" rx="6" fill="url(#chaosGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="1;0.7;1" dur="2.3s" repeatCount="indefinite"/>
      </rect>
      <text x="640" y="28" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="white">Side Effect</text>
      
      <!-- Chaotic arrows with animation -->
      <path d="M 80 40 Q 100 25 120 20" stroke="#ff6b6b" stroke-width="2" fill="none" marker-end="url(#arrowRed)" opacity="0.8">
        <animate attributeName="stroke-dasharray" values="0,100;20,20;0,100" dur="3s" repeatCount="indefinite"/>
        <animate attributeName="opacity" values="0.8;0.4;0.8" dur="3s" repeatCount="indefinite"/>
      </path>
      <path d="M 200 20 Q 220 30 240 55" stroke="#ff6b6b" stroke-width="2" fill="none" marker-end="url(#arrowRed)" opacity="0.8">
        <animate attributeName="stroke-dasharray" values="0,100;20,20;0,100" dur="2.5s" repeatCount="indefinite"/>
        <animate attributeName="opacity" values="0.8;0.4;0.8" dur="2.5s" repeatCount="indefinite"/>
      </path>
      <path d="M 320 55 Q 340 35 360 30" stroke="#ff6b6b" stroke-width="2" fill="none" marker-end="url(#arrowRed)" opacity="0.8">
        <animate attributeName="stroke-dasharray" values="0,100;20,20;0,100" dur="3.2s" repeatCount="indefinite"/>
        <animate attributeName="opacity" values="0.8;0.4;0.8" dur="3.2s" repeatCount="indefinite"/>
      </path>
      <path d="M 440 30 Q 460 35 480 45" stroke="#ff6b6b" stroke-width="2" fill="none" marker-end="url(#arrowRed)" opacity="0.8">
        <animate attributeName="stroke-dasharray" values="0,100;20,20;0,100" dur="2.8s" repeatCount="indefinite"/>
        <animate attributeName="opacity" values="0.8;0.4;0.8" dur="2.8s" repeatCount="indefinite"/>
      </path>
      <path d="M 560 45 Q 580 30 600 25" stroke="#ff6b6b" stroke-width="2" fill="none" marker-end="url(#arrowRed)" opacity="0.8">
        <animate attributeName="stroke-dasharray" values="0,100;20,20;0,100" dur="3.5s" repeatCount="indefinite"/>
        <animate attributeName="opacity" values="0.8;0.4;0.8" dur="3.5s" repeatCount="indefinite"/>
      </path>
      
      <!-- Unexpected side connections -->
      <path d="M 160 40 Q 180 60 280 75" stroke="#ff6b6b" stroke-width="1.5" fill="none" stroke-dasharray="3,3" opacity="0.6">
        <animate attributeName="opacity" values="0.6;0.2;0.6" dur="4s" repeatCount="indefinite"/>
      </path>
      <path d="M 400 50 Q 420 70 520 65" stroke="#ff6b6b" stroke-width="1.5" fill="none" stroke-dasharray="3,3" opacity="0.6">
        <animate attributeName="opacity" values="0.6;0.2;0.6" dur="3.5s" repeatCount="indefinite"/>
      </path>
    </g>
    
    <!-- Problems list -->
    <g transform="translate(0, 100)">
      <text x="0" y="0" font-family="Inter, sans-serif" font-size="12" fill="#ef4444">❌ No traceability</text>
      <text x="150" y="0" font-family="Inter, sans-serif" font-size="12" fill="#ef4444">❌ Hard to test</text>
      <text x="300" y="0" font-family="Inter, sans-serif" font-size="12" fill="#ef4444">❌ Surprise side-effects</text>
    </g>
  </g>
  
  <!-- Animated divider -->
  <line x1="80" y1="250" x2="720" y2="250" stroke="#4b5563" stroke-width="2" opacity="0.7">
    <animate attributeName="opacity" values="0.7;0.3;0.7" dur="6s" repeatCount="indefinite"/>
  </line>
  
  <!-- Sequence Engine Section (Bottom) -->
  <g transform="translate(50, 280)">
    <text x="0" y="0" font-family="Inter, sans-serif" font-size="14" font-weight="600" fill="#9ca3af">AFTER: Sequence Engine</text>
    
    <!-- Play trigger with hover glow -->
    <g transform="translate(0, 30)">
      <rect x="0" y="0" width="120" height="50" rx="8" fill="url(#sequenceGradient)" filter="url(#shadow)">
        <animate attributeName="filter" values="url(#shadow);url(#strongGlow);url(#shadow)" dur="4s" repeatCount="indefinite"/>
      </rect>
      <text x="60" y="20" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="11" font-weight="600" fill="white">Play</text>
      <text x="60" y="35" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="9" fill="#a7f3d0">("Library.load")</text>
    </g>
    
    <!-- Animated arrow to sequence -->
    <path d="M 130 55 L 170 55" stroke="#00d2d3" stroke-width="3" fill="none" marker-end="url(#arrowTeal)">
      <animate attributeName="stroke-dasharray" values="40,0;0,40;40,0" dur="2s" repeatCount="indefinite"/>
    </path>
    
    <!-- Sequence beats with staggered animations -->
    <g transform="translate(180, 20)">
      <!-- Beat 1: resolveData -->
      <rect x="0" y="0" width="120" height="70" rx="8" fill="url(#beatGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="0.7;1;0.7" dur="6s" repeatCount="indefinite" begin="0s"/>
      </rect>
      <text x="60" y="25" text-anchor="middle" font-family="Inter, sans-serif" font-size="12" font-weight="600" fill="white">Beat 1</text>
      <text x="60" y="40" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="10" fill="#e8e8e8">resolveData</text>
      <text x="60" y="55" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="8" fill="#d1d8e0">ctx → baton</text>
      
      <!-- Animated Baton 1 -->
      <circle cx="140" cy="35" r="12" fill="url(#batonGlow)" filter="url(#strongGlow)">
        <animate attributeName="r" values="12;16;12" dur="2s" repeatCount="indefinite" begin="1s"/>
        <animate attributeName="opacity" values="0.8;1;0.8" dur="2s" repeatCount="indefinite" begin="1s"/>
        <animateTransform attributeName="transform" type="rotate" values="0 140 35;360 140 35" dur="3s" repeatCount="indefinite"/>
      </circle>
      <text x="140" y="40" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="#2d3436">🎯</text>
      
      <!-- Animated Arrow -->
      <path d="M 160 35 L 200 35" stroke="#a29bfe" stroke-width="3" fill="none" marker-end="url(#arrowPurple)">
        <animate attributeName="stroke-dasharray" values="40,0;0,40;40,0" dur="2s" repeatCount="indefinite" begin="1.5s"/>
      </path>
      
      <!-- Beat 2: normalize -->
      <rect x="220" y="0" width="120" height="70" rx="8" fill="url(#beatGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="0.7;1;0.7" dur="6s" repeatCount="indefinite" begin="2s"/>
      </rect>
      <text x="280" y="25" text-anchor="middle" font-family="Inter, sans-serif" font-size="12" font-weight="600" fill="white">Beat 2</text>
      <text x="280" y="40" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="10" fill="#e8e8e8">normalize</text>
      <text x="280" y="55" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="8" fill="#d1d8e0">ctx → baton</text>
      
      <!-- Animated Baton 2 -->
      <circle cx="360" cy="35" r="12" fill="url(#batonGlow)" filter="url(#strongGlow)">
        <animate attributeName="r" values="12;16;12" dur="2s" repeatCount="indefinite" begin="3s"/>
        <animate attributeName="opacity" values="0.8;1;0.8" dur="2s" repeatCount="indefinite" begin="3s"/>
        <animateTransform attributeName="transform" type="rotate" values="0 360 35;360 360 35" dur="3s" repeatCount="indefinite"/>
      </circle>
      <text x="360" y="40" text-anchor="middle" font-family="Inter, sans-serif" font-size="10" fill="#2d3436">🎯</text>
      
      <!-- Animated Arrow -->
      <path d="M 380 35 L 420 35" stroke="#a29bfe" stroke-width="3" fill="none" marker-end="url(#arrowPurple)">
        <animate attributeName="stroke-dasharray" values="40,0;0,40;40,0" dur="2s" repeatCount="indefinite" begin="3.5s"/>
      </path>
      
      <!-- Beat 3: publish -->
      <rect x="440" y="0" width="120" height="70" rx="8" fill="url(#beatGradient)" filter="url(#shadow)">
        <animate attributeName="opacity" values="0.7;1;0.7" dur="6s" repeatCount="indefinite" begin="4s"/>
      </rect>
      <text x="500" y="25" text-anchor="middle" font-family="Inter, sans-serif" font-size="12" font-weight="600" fill="white">Beat 3</text>
      <text x="500" y="40" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="10" fill="#e8e8e8">publish</text>
      <text x="500" y="55" text-anchor="middle" font-family="JetBrains Mono, monospace" font-size="8" fill="#d1d8e0">ctx → baton</text>
      
      <!-- Final result arrow -->
      <path d="M 580 35 L 620 35" stroke="#a29bfe" stroke-width="3" fill="none" marker-end="url(#arrowPurple)">
        <animate attributeName="stroke-dasharray" values="40,0;0,40;40,0" dur="2s" repeatCount="indefinite" begin="5s"/>
      </path>
      
      <!-- Animated final result -->
      <circle cx="640" cy="35" r="15" fill="#10b981" filter="url(#strongGlow)">
        <animate attributeName="r" values="15;20;15" dur="3s" repeatCount="indefinite" begin="5.5s"/>
        <animate attributeName="opacity" values="0.8;1;0.8" dur="3s" repeatCount="indefinite" begin="5.5s"/>
      </circle>
      <text x="640" y="40" text-anchor="middle" font-family="Inter, sans-serif" font-size="12" fill="white">✓</text>
    </g>
    
    <!-- Benefits list with staggered fade-in -->
    <g transform="translate(0, 120)">
      <text x="0" y="0" font-family="Inter, sans-serif" font-size="12" fill="#10b981">✓ Traceability (logs: play → beat → result)
        <animate attributeName="opacity" values="0.5;1;0.5" dur="4s" repeatCount="indefinite"/>
      </text>
      <text x="0" y="20" font-family="Inter, sans-serif" font-size="12" fill="#10b981">✓ Testability (run sequence with fake context)
        <animate attributeName="opacity" values="0.5;1;0.5" dur="4s" repeatCount="indefinite" begin="1s"/>
      </text>
      <text x="0" y="40" font-family="Inter, sans-serif" font-size="12" fill="#10b981">✓ Predictability (no surprise side-effects)
        <animate attributeName="opacity" values="0.5;1;0.5" dur="4s" repeatCount="indefinite" begin="2s"/>
      </text>
    </g>
    
    <!-- Rule callout with subtle glow -->
    <g transform="translate(0, 180)">
      <rect x="0" y="0" width="700" height="35" rx="6" fill="#374151" stroke="#6b7280" stroke-width="1" filter="url(#glow)">
        <animate attributeName="opacity" values="0.9;1;0.9" dur="8s" repeatCount="indefinite"/>
      </rect>
      <text x="15" y="23" font-family="Inter, sans-serif" font-size="13" font-style="italic" fill="#f3f4f6">
        💡 Rule: When you write the 3rd chained async + conditional branch inside a UI effect, extract a named sequence.
      </text>
    </g>
  </g>
  
  <!-- Arrow markers -->
  <defs>
    <marker id="arrowRed" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#ff6b6b"/>
    </marker>
    <marker id="arrowTeal" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#00d2d3"/>
    </marker>
    <marker id="arrowPurple" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#a29bfe"/>
    </marker>
  </defs>
</svg>