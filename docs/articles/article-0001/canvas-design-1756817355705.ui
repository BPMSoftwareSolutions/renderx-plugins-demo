{
  "version": "1.0.1",
  "metadata": {
    "createdAt": "2025-09-02T12:49:15.695Z",
    "canvasSize": {
      "width": 847,
      "height": 738
    },
    "componentCount": 1
  },
  "cssClasses": {
    "rx-svg": {
      "name": "rx-svg",
      "content": ".rx-svg * { vector-effect: non-scaling-stroke; }",
      "createdAt": 1756817102581,
      "updatedAt": 1756817102581,
      "isBuiltIn": false
    }
  },
  "components": [
    {
      "id": "rx-node-99hw58",
      "type": "svg",
      "template": {
        "tag": "svg",
        "classRefs": [
          "rx-comp",
          "rx-svg",
          "rx-comp-svg-99hw58"
        ],
        "style": {}
      },
      "layout": {
        "x": 47,
        "y": 45,
        "width": 790,
        "height": 411
      },
      "parentId": null,
      "siblingIndex": 0,
      "createdAt": 1756817355674,
      "content": {
        "text": "/* Light theme (default) */\n      .bg-primary { fill: #ffffff; }\n      .bg-secondary { fill: #f8fafc; }\n      .text-primary { fill: #0f172a; }\n      .text-secondary { fill: #334155; }\n      .text-muted { fill: #64748b; }\n      .border-light { stroke: #e2e8f0; }\n      \n      /* Symphony theme colors */\n      .ui-bg { fill: #e0f2fe; stroke: #0369a1; }\n      .ui-text { fill: #0c4a6e; }\n      .conductor-bg { fill: #faf5ff; stroke: #7c3aed; }\n      .conductor-text { fill: #4c1d95; }\n      .symphony-bg { fill: #fef3c7; stroke: #d97706; }\n      .symphony-text { fill: #92400e; }\n      .beat-bg { fill: #ecfdf5; stroke: #059669; }\n      .beat-text { fill: #064e3b; }\n      .log-bg { fill: #f1f5f9; stroke: #64748b; }\n      .log-text { fill: #374151; }\n      \n      /* Dark theme */\n      @media (prefers-color-scheme: dark) {\n        .bg-primary { fill: #0f172a; }\n        .bg-secondary { fill: #1e293b; }\n        .text-primary { fill: #f1f5f9; }\n        .text-secondary { fill: #cbd5e1; }\n        .text-muted { fill: #94a3b8; }\n        .border-light { stroke: #334155; }\n        \n        .ui-bg { fill: #0c4a6e; stroke: #0ea5e9; }\n        .ui-text { fill: #bae6fd; }\n        .conductor-bg { fill: #4c1d95; stroke: #8b5cf6; }\n        .conductor-text { fill: #ddd6fe; }\n        .symphony-bg { fill: #92400e; stroke: #f59e0b; }\n        .symphony-text { fill: #fcd34d; }\n        .beat-bg { fill: #064e3b; stroke: #10b981; }\n        .beat-text { fill: #bbf7d0; }\n        .log-bg { fill: #374151; stroke: #6b7280; }\n        .log-text { fill: #d1d5db; }\n      }\n      \n      /* Musical animations */\n      @keyframes conduct {\n        0%, 100% { transform: rotate(-3deg); }\n        50% { transform: rotate(3deg); }\n      }\n      \n      .conducting { animation: conduct 2s ease-in-out infinite; }\n      \n      @keyframes flow {\n        0% { stroke-dashoffset: 30; }\n        100% { stroke-dashoffset: 0; }\n      }\n      \n      .flow-line { \n        stroke-dasharray: 15, 5; \n        animation: flow 3s linear infinite; \n      }\n      \n      @keyframes pulse {\n        0%, 100% { opacity: 1; }\n        50% { opacity: 0.6; }\n      }\n      \n      .pulse { animation: pulse 1.5s infinite; }\n      \n      @keyframes beat {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n      }\n      \n      .beating { animation: beat 1s ease-in-out infinite; }\n      \n    \n    \n    \n    \n      \n      \n      \n      \n      \n      \n    \n    \n    \n    \n      \n    \n    \n    \n      \n    \n    \n    \n    \n      \n    \n    \n    \n    \n      \n       \n        \n        \n      \n    \n  \n  \n  \n  \n  \n  \n  \n  \n    üéº Symphony Orchestration Flow\n  \n  \n    \"JSON sequences with correlated logging and cross-plugin sequence tracing\"\n  \n  \n  \n  \n  \n  \n    üéØ LibraryPanel\n  \n  \n    UI Component\n  \n  \n  \n  \n  \n  \n    React.useEffect(() => {\n    conductor.play(\n    'LibraryPlugin',\n    'load',\n    { onComponentsLoaded: \n    (data) => setComponents\n    });\n  \n  \n  \n  \n  \n    conductor.play()\n  \n  \n  \n  \n  \n  \n    üéº Musical Conductor\n  \n  \n    Orchestration engine\n  \n  \n  \n  \n  \n  \n    üìÑ load.symphony.json\n  \n  \n  \n    { \"id\": \"library.load\",\n    \"pluginId\": \"LibraryPlugin\",\n    \"movements\": [\n    { \"id\": \"fetch-components\" },\n    { \"id\": \"process-data\" },\n    { \"id\": \"notify-ui\" }\n    ] }\n  \n  \n  \n  \n  \n    üéµ SequenceEngine loads JSON sequence\n    üéØ EventBus publishes beats with correlation ID\n  \n  \n  \n  \n  \n  \n  \n  \n  \n    ü•Å Beat Execution\n  \n  \n    Sequential movement execution\n  \n  \n  \n  \n  \n  \n    üéµ Movement 1: fetch-components\n  \n  \n  \n    Beat: api-call\n    endpoint: \"/api/components\"\n    method: \"GET\"\n  \n  \n  \n  \n  \n  \n    üéµ Movement 2: process-data\n  \n  \n  \n    Beat: data-transform\n    handler: \"processComponentData\"\n    // Business logic transformation\n  \n  \n  \n  \n  \n  \n    üéµ Movement 3: notify-ui\n  \n  \n  \n    Beat: callback\n    target: \"onComponentsLoaded\"\n    // UI state update\n  \n  \n  \n  \n  \n  \n    üîç Correlation ID: abc-123\n  \n  \n  \n    [INFO] Publishing library.load\n    [DEBUG] Handler executed\n  \n  \n  \n  \n  \n  \n    ‚è±Ô∏è Performance Metrics\n  \n  \n  \n    Movement 1: 15ms ‚Ä¢ Movement 2: 8ms\n    Movement 3: 3ms ‚Ä¢ Total: 26ms\n  \n  \n  \n  \n  \n  \n    üîÑ Cross-Plugin Flow\n  \n  \n    Plugin coordination example\n  \n  \n  \n  \n  \n  \n    // CanvasPage drop event\n    conductor.play('LibraryComponentPlugin',\n    'drop', { dropData })\n    ‚Üì drop.symphony.json\n    1. validate-drop beat\n    2. forward-to-canvas beat\n    conductor.play('CanvasComponentPlugin', 'create')\n  \n  \n  \n  \n  \n  \n    [INFO] correlationId=def-456\n    topic=canvas-component.create plugin=CanvasComponentPlugin\n  \n  \n  \n  \n  \n    Cross-plugin sequence\n  \n  \n  \n  \n  \n  \n    üéØ Symphony Orchestration Benefits\n  \n  \n  \n    \n      üéº Hierarchical beat execution with full context and correlation IDs\n      üéØ JSON-defined sequences make flows self-documenting and traceable\n      üîç Cross-plugin coordination without tight coupling or direct dependencies\n      ‚è±Ô∏è Performance metrics and structured logging at every execution level\n    \n    \n    \n      Result: Predictable, traceable, and debuggable plugin orchestration with complete observability",
        "viewBox": "10 50 1900 800",
        "preserveAspectRatio": "xMidYMid meet",
        "svgMarkup": "\n  <defs xmlns=\"http://www.w3.org/2000/svg\">\n    <!-- CSS for theme awareness -->\n    <style>\n      \n      /* Light theme (default) */\n      .bg-primary { fill: #ffffff; }\n      .bg-secondary { fill: #f8fafc; }\n      .text-primary { fill: #0f172a; }\n      .text-secondary { fill: #334155; }\n      .text-muted { fill: #64748b; }\n      .border-light { stroke: #e2e8f0; }\n      \n      /* Symphony theme colors */\n      .ui-bg { fill: #e0f2fe; stroke: #0369a1; }\n      .ui-text { fill: #0c4a6e; }\n      .conductor-bg { fill: #faf5ff; stroke: #7c3aed; }\n      .conductor-text { fill: #4c1d95; }\n      .symphony-bg { fill: #fef3c7; stroke: #d97706; }\n      .symphony-text { fill: #92400e; }\n      .beat-bg { fill: #ecfdf5; stroke: #059669; }\n      .beat-text { fill: #064e3b; }\n      .log-bg { fill: #f1f5f9; stroke: #64748b; }\n      .log-text { fill: #374151; }\n      \n      /* Dark theme */\n      @media (prefers-color-scheme: dark) {\n        .bg-primary { fill: #0f172a; }\n        .bg-secondary { fill: #1e293b; }\n        .text-primary { fill: #f1f5f9; }\n        .text-secondary { fill: #cbd5e1; }\n        .text-muted { fill: #94a3b8; }\n        .border-light { stroke: #334155; }\n        \n        .ui-bg { fill: #0c4a6e; stroke: #0ea5e9; }\n        .ui-text { fill: #bae6fd; }\n        .conductor-bg { fill: #4c1d95; stroke: #8b5cf6; }\n        .conductor-text { fill: #ddd6fe; }\n        .symphony-bg { fill: #92400e; stroke: #f59e0b; }\n        .symphony-text { fill: #fcd34d; }\n        .beat-bg { fill: #064e3b; stroke: #10b981; }\n        .beat-text { fill: #bbf7d0; }\n        .log-bg { fill: #374151; stroke: #6b7280; }\n        .log-text { fill: #d1d5db; }\n      }\n      \n      /* Musical animations */\n      @keyframes conduct {\n        0%, 100% { transform: rotate(-3deg); }\n        50% { transform: rotate(3deg); }\n      }\n      \n      .conducting { animation: conduct 2s ease-in-out infinite; }\n      \n      @keyframes flow {\n        0% { stroke-dashoffset: 30; }\n        100% { stroke-dashoffset: 0; }\n      }\n      \n      .flow-line { \n        stroke-dasharray: 15, 5; \n        animation: flow 3s linear infinite; \n      }\n      \n      @keyframes pulse {\n        0%, 100% { opacity: 1; }\n        50% { opacity: 0.6; }\n      }\n      \n      .pulse { animation: pulse 1.5s infinite; }\n      \n      @keyframes beat {\n        0%, 100% { transform: scale(1); }\n        50% { transform: scale(1.05); }\n      }\n      \n      .beating { animation: beat 1s ease-in-out infinite; }\n      \n    </style>\n    \n    <!-- Musical background pattern -->\n    <pattern id=\"musicalGrid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n      <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" class=\"border-light\" stroke-width=\"0.3\" opacity=\"0.2\"></path>\n      <!-- Musical notes -->\n      <circle cx=\"10\" cy=\"15\" r=\"2\" class=\"conductor-text\" opacity=\"0.1\"></circle>\n      <path d=\"M 10 15 L 10 5\" class=\"conductor-text\" stroke-width=\"1\" opacity=\"0.1\"></path>\n      <circle cx=\"30\" cy=\"25\" r=\"1.5\" class=\"symphony-text\" opacity=\"0.1\"></circle>\n      <path d=\"M 30 25 L 30 10\" class=\"symphony-text\" stroke-width=\"0.8\" opacity=\"0.1\"></path>\n    </pattern>\n    \n    <!-- Arrow markers -->\n    <marker id=\"flowArrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"8\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n      <path d=\"M0,0 L0,6 L9,3 z\" class=\"conductor-text\"></path>\n    </marker>\n    \n    <marker id=\"beatArrow\" markerWidth=\"8\" markerHeight=\"8\" refX=\"6\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n      <path d=\"M0,0 L0,6 L7,3 z\" class=\"beat-text\"></path>\n    </marker>\n    \n    <!-- Shadow filter -->\n    <filter id=\"dropShadow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n      <feDropShadow dx=\"2\" dy=\"4\" stdDeviation=\"3\" flood-color=\"#000000\" flood-opacity=\"0.15\"></feDropShadow>\n    </filter>\n    \n    <!-- Glow effect -->\n    <filter id=\"glow\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n      <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\"></feGaussianBlur>\n      <feMerge> \n        <feMergeNode in=\"coloredBlur\"></feMergeNode>\n        <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n      </feMerge>\n    </filter>\n  </defs>\n  \n  <!-- Background -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" width=\"1400\" height=\"900\" class=\"bg-primary\"></rect>\n  <rect xmlns=\"http://www.w3.org/2000/svg\" width=\"1400\" height=\"900\" fill=\"url(#musicalGrid)\"></rect>\n  \n  <!-- Title -->\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"700\" y=\"40\" text-anchor=\"middle\" font-family=\"'Segoe UI', system-ui, sans-serif\" font-size=\"24\" font-weight=\"700\" class=\"text-primary\">\n    üéº Symphony Orchestration Flow\n  </text>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"700\" y=\"65\" text-anchor=\"middle\" font-family=\"'Segoe UI', system-ui, sans-serif\" font-size=\"14\" class=\"text-muted\" font-style=\"italic\">\n    \"JSON sequences with correlated logging and cross-plugin sequence tracing\"\n  </text>\n  \n  <!-- Step 1: UI Component -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"50\" y=\"100\" width=\"250\" height=\"180\" rx=\"12\" class=\"ui-bg\" stroke-width=\"3\" filter=\"url(#dropShadow)\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"130\" font-family=\"'JetBrains Mono', 'Fira Code', monospace\" font-size=\"14\" font-weight=\"700\" class=\"ui-text\">\n    üéØ LibraryPanel\n  </text>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"145\" font-family=\"'Segoe UI', sans-serif\" font-size=\"10\" class=\"text-muted\">\n    UI Component\n  </text>\n  \n  <!-- Component code -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"155\" width=\"210\" height=\"110\" rx=\"8\" class=\"bg-secondary border-light\" stroke-width=\"1\"></rect>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"10\">\n    <text x=\"80\" y=\"175\" class=\"text-secondary\">React.useEffect(() =&gt; {</text>\n    <text x=\"90\" y=\"190\" class=\"ui-text\">conductor.play(</text>\n    <text x=\"100\" y=\"205\" class=\"conductor-text\">'LibraryPlugin',</text>\n    <text x=\"100\" y=\"220\" class=\"conductor-text\">'load',</text>\n    <text x=\"100\" y=\"235\" class=\"symphony-text\">{ onComponentsLoaded: </text>\n    <text x=\"110\" y=\"250\" class=\"beat-text\">(data) =&gt; setComponents</text>\n    <text x=\"90\" y=\"265\" class=\"ui-text\">});</text>\n  </g>\n  \n  <!-- Arrow from UI to Conductor -->\n  <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M 300 190 Q 400 150 500 190\" stroke-width=\"4\" class=\"conductor-text flow-line\" marker-end=\"url(#flowArrow)\" fill=\"none\"></path>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"400\" y=\"140\" text-anchor=\"middle\" font-family=\"'Segoe UI', sans-serif\" font-size=\"10\" font-weight=\"600\" class=\"conductor-text\">\n    conductor.play()\n  </text>\n  \n  <!-- Step 2: Musical Conductor -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"500\" y=\"100\" width=\"380\" height=\"250\" rx=\"12\" class=\"conductor-bg conducting\" stroke-width=\"3\" filter=\"url(#dropShadow)\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"520\" y=\"130\" font-family=\"'JetBrains Mono', 'Fira Code', monospace\" font-size=\"16\" font-weight=\"700\" class=\"conductor-text\">\n    üéº Musical Conductor\n  </text>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"520\" y=\"145\" font-family=\"'Segoe UI', sans-serif\" font-size=\"10\" class=\"text-muted\">\n    Orchestration engine\n  </text>\n  \n  <!-- Symphony JSON box -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"520\" y=\"160\" width=\"340\" height=\"130\" rx=\"8\" class=\"symphony-bg\" stroke-width=\"2\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"530\" y=\"180\" font-family=\"'JetBrains Mono', monospace\" font-size=\"12\" font-weight=\"700\" class=\"symphony-text\">\n    üìÑ load.symphony.json\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"540\" y=\"200\" class=\"text-primary\">{ \"id\": \"library.load\",</text>\n    <text x=\"550\" y=\"215\" class=\"conductor-text\">\"pluginId\": \"LibraryPlugin\",</text>\n    <text x=\"550\" y=\"230\" class=\"symphony-text\">\"movements\": [</text>\n    <text x=\"560\" y=\"245\" class=\"beat-text\">{ \"id\": \"fetch-components\" },</text>\n    <text x=\"560\" y=\"260\" class=\"beat-text\">{ \"id\": \"process-data\" },</text>\n    <text x=\"560\" y=\"275\" class=\"beat-text\">{ \"id\": \"notify-ui\" }</text>\n    <text x=\"550\" y=\"290\" class=\"symphony-text\">] }</text>\n  </g>\n  \n  <!-- Conductor processing -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"520\" y=\"300\" width=\"340\" height=\"40\" rx=\"6\" class=\"bg-secondary border-light\" stroke-width=\"1\"></rect>\n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'Segoe UI', sans-serif\" font-size=\"11\" class=\"text-secondary\">\n    <text x=\"530\" y=\"315\">üéµ SequenceEngine loads JSON sequence</text>\n    <text x=\"530\" y=\"330\">üéØ EventBus publishes beats with correlation ID</text>\n  </g>\n  \n  <!-- Arrow from Conductor to Beat Execution -->\n  <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M 690 350 Q 690 400 690 450\" stroke-width=\"4\" class=\"beat-text flow-line\" marker-end=\"url(#beatArrow)\" fill=\"none\"></path>\n  \n  <!-- Step 3: Beat Execution Flow -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"950\" y=\"100\" width=\"380\" height=\"550\" rx=\"12\" class=\"beat-bg\" stroke-width=\"3\" filter=\"url(#dropShadow)\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"130\" font-family=\"'JetBrains Mono', 'Fira Code', monospace\" font-size=\"16\" font-weight=\"700\" class=\"beat-text\">\n    ü•Å Beat Execution\n  </text>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"145\" font-family=\"'Segoe UI', sans-serif\" font-size=\"10\" class=\"text-muted\">\n    Sequential movement execution\n  </text>\n  \n  <!-- Movement 1: Fetch Components -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"160\" width=\"340\" height=\"80\" rx=\"8\" class=\"bg-secondary border-light beating\" stroke-width=\"2\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"980\" y=\"180\" font-family=\"'Segoe UI', sans-serif\" font-size=\"12\" font-weight=\"700\" class=\"beat-text\">\n    üéµ Movement 1: fetch-components\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"990\" y=\"200\" class=\"text-secondary\">Beat: api-call</text>\n    <text x=\"990\" y=\"215\" class=\"text-primary\">endpoint: \"/api/components\"</text>\n    <text x=\"990\" y=\"230\" class=\"text-primary\">method: \"GET\"</text>\n  </g>\n  \n  <!-- Movement 2: Process Data -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"250\" width=\"340\" height=\"80\" rx=\"8\" class=\"bg-secondary border-light beating\" stroke-width=\"2\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"980\" y=\"270\" font-family=\"'Segoe UI', sans-serif\" font-size=\"12\" font-weight=\"700\" class=\"beat-text\">\n    üéµ Movement 2: process-data\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"990\" y=\"290\" class=\"text-secondary\">Beat: data-transform</text>\n    <text x=\"990\" y=\"305\" class=\"text-primary\">handler: \"processComponentData\"</text>\n    <text x=\"990\" y=\"320\" class=\"text-muted\">// Business logic transformation</text>\n  </g>\n  \n  <!-- Movement 3: Notify UI -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"340\" width=\"340\" height=\"80\" rx=\"8\" class=\"bg-secondary border-light beating\" stroke-width=\"2\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"980\" y=\"360\" font-family=\"'Segoe UI', sans-serif\" font-size=\"12\" font-weight=\"700\" class=\"beat-text\">\n    üéµ Movement 3: notify-ui\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"990\" y=\"380\" class=\"text-secondary\">Beat: callback</text>\n    <text x=\"990\" y=\"395\" class=\"text-primary\">target: \"onComponentsLoaded\"</text>\n    <text x=\"990\" y=\"410\" class=\"text-muted\">// UI state update</text>\n  </g>\n  \n  <!-- Correlation ID tracking -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"440\" width=\"340\" height=\"60\" rx=\"8\" class=\"conductor-bg\" stroke-width=\"2\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"980\" y=\"460\" font-family=\"'Segoe UI', sans-serif\" font-size=\"12\" font-weight=\"700\" class=\"conductor-text\">\n    üîç Correlation ID: abc-123\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"990\" y=\"480\" class=\"text-secondary\">[INFO] Publishing library.load</text>\n    <text x=\"990\" y=\"495\" class=\"text-secondary\">[DEBUG] Handler executed</text>\n  </g>\n  \n  <!-- Performance metrics -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"970\" y=\"520\" width=\"340\" height=\"60\" rx=\"8\" class=\"symphony-bg\" stroke-width=\"2\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"980\" y=\"540\" font-family=\"'Segoe UI', sans-serif\" font-size=\"12\" font-weight=\"700\" class=\"symphony-text\">\n    ‚è±Ô∏è Performance Metrics\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"990\" y=\"560\" class=\"text-secondary\">Movement 1: 15ms ‚Ä¢ Movement 2: 8ms</text>\n    <text x=\"990\" y=\"575\" class=\"text-secondary\">Movement 3: 3ms ‚Ä¢ Total: 26ms</text>\n  </g>\n  \n  <!-- Step 4: Cross-Plugin Communication -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"50\" y=\"400\" width=\"500\" height=\"250\" rx=\"12\" class=\"log-bg\" stroke-width=\"3\" filter=\"url(#dropShadow)\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"430\" font-family=\"'JetBrains Mono', 'Fira Code', monospace\" font-size=\"16\" font-weight=\"700\" class=\"log-text\">\n    üîÑ Cross-Plugin Flow\n  </text>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"445\" font-family=\"'Segoe UI', sans-serif\" font-size=\"10\" class=\"text-muted\">\n    Plugin coordination example\n  </text>\n  \n  <!-- Drop symphony example -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"460\" width=\"460\" height=\"120\" rx=\"8\" class=\"bg-secondary border-light\" stroke-width=\"1\"></rect>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"10\">\n    <text x=\"80\" y=\"480\" class=\"ui-text\">// CanvasPage drop event</text>\n    <text x=\"80\" y=\"495\" class=\"conductor-text\">conductor.play('LibraryComponentPlugin',</text>\n    <text x=\"140\" y=\"510\" class=\"conductor-text\">'drop', { dropData })</text>\n    <text x=\"80\" y=\"530\" class=\"beat-text\">‚Üì drop.symphony.json</text>\n    <text x=\"80\" y=\"545\" class=\"text-secondary\">1. validate-drop beat</text>\n    <text x=\"80\" y=\"560\" class=\"text-secondary\">2. forward-to-canvas beat</text>\n    <text x=\"90\" y=\"575\" class=\"symphony-text\">conductor.play('CanvasComponentPlugin', 'create')</text>\n  </g>\n  \n  <!-- Logging output -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"70\" y=\"590\" width=\"460\" height=\"50\" rx=\"8\" class=\"log-bg\" stroke-width=\"1\"></rect>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'JetBrains Mono', monospace\" font-size=\"9\">\n    <text x=\"80\" y=\"610\" class=\"log-text\">[INFO] correlationId=def-456</text>\n    <text x=\"80\" y=\"625\" class=\"text-secondary\">topic=canvas-component.create plugin=CanvasComponentPlugin</text>\n  </g>\n  \n  <!-- Arrows showing plugin communication -->\n  <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M 300 530 Q 450 480 500 530\" stroke-width=\"3\" class=\"symphony-text flow-line\" marker-end=\"url(#flowArrow)\" fill=\"none\"></path>\n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"400\" y=\"500\" text-anchor=\"middle\" font-family=\"'Segoe UI', sans-serif\" font-size=\"9\" font-weight=\"600\" class=\"symphony-text\">\n    Cross-plugin sequence\n  </text>\n  \n  <!-- Benefits summary -->\n  <rect xmlns=\"http://www.w3.org/2000/svg\" x=\"50\" y=\"700\" width=\"1280\" height=\"150\" rx=\"12\" class=\"bg-secondary border-light\" stroke-width=\"1\" filter=\"url(#dropShadow)\"></rect>\n  \n  <text xmlns=\"http://www.w3.org/2000/svg\" x=\"700\" y=\"730\" text-anchor=\"middle\" font-family=\"'Segoe UI', system-ui, sans-serif\" font-size=\"18\" font-weight=\"700\" class=\"text-primary\">\n    üéØ Symphony Orchestration Benefits\n  </text>\n  \n  <g xmlns=\"http://www.w3.org/2000/svg\" font-family=\"'Segoe UI', system-ui, sans-serif\" font-size=\"12\">\n    <g class=\"text-secondary\">\n      <text x=\"70\" y=\"760\">üéº <tspan class=\"symphony-text\">Hierarchical beat execution</tspan> with full context and correlation IDs</text>\n      <text x=\"70\" y=\"780\">üéØ <tspan class=\"beat-text\">JSON-defined sequences</tspan> make flows self-documenting and traceable</text>\n      <text x=\"70\" y=\"800\">üîç <tspan class=\"conductor-text\">Cross-plugin coordination</tspan> without tight coupling or direct dependencies</text>\n      <text x=\"70\" y=\"820\">‚è±Ô∏è <tspan class=\"log-text\">Performance metrics</tspan> and structured logging at every execution level</text>\n    </g>\n    \n    <text x=\"700\" y=\"845\" text-anchor=\"middle\" class=\"text-muted\" font-style=\"italic\" font-size=\"11\">\n      Result: Predictable, traceable, and debuggable plugin orchestration with complete observability\n    </text>\n  </g>\n"
      }
    }
  ]
}