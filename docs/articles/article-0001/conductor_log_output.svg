<svg width="1400" height="900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      <![CDATA[
      /* Dark terminal theme */
      .terminal-bg { fill: #1e1e1e; }
      .terminal-text { fill: #d4d4d4; font-family: 'Consolas', 'Monaco', 'Courier New', monospace; }
      
      /* Log level colors matching VS Code dark theme */
      .log-sequence { fill: #569cd6; } /* Blue for sequence names */
      .log-movement { fill: #4ec9b0; } /* Teal for movements */
      .log-beat { fill: #dcdcaa; }     /* Yellow for beat numbers */
      .log-event { fill: #ce9178; }    /* Orange for events */
      .log-success { fill: #4fc1ff; } /* Light blue for checkmarks */
      .log-timing { fill: #9cdcfe; }  /* Light cyan for timing */
      .log-debug { fill: #608b4e; }   /* Green for debug info */
      .log-warning { fill: #ffcc02; } /* Yellow for warnings */
      .log-data { fill: #d7ba7d; }    /* Light brown for data */
      .log-correlation { fill: #c586c0; } /* Purple for correlation IDs */
      
      /* Indentation and tree structure */
      .indent-0 { }
      .indent-1 { }
      .indent-2 { }
      .indent-3 { }
      .indent-4 { }
      
      /* Tree structure symbols */
      .tree-expand { fill: #cccccc; }
      .tree-collapse { fill: #cccccc; }
      .tree-line { fill: #404040; }
      ]]>
    </style>
  </defs>
  
  <!-- Terminal background -->
  <rect width="1400" height="900" class="terminal-bg"/>
  
  <!-- Log entries with proper indentation and tree structure -->
  
  <!-- MovementExecutor: Executing beat 2 (2/3) -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="20" class="tree-expand">▼</text>
    <text x="40" y="20" class="log-debug">🎥 MovementExecutor: Executing beat 2 (2/3)</text>
    <text x="1200" y="20" class="log-timing">MovementExecutor.ts:81</text>
  </g>
  
  <!-- PerformanceTracker: Started timing beat 2 -->
  <g class="terminal-text" font-size="11">
    <text x="40" y="40" class="tree-line">●</text>
    <text x="60" y="40" class="log-timing">⏱️ PerformanceTracker: Started timing beat 2 for Control Panel UI Render</text>
    <text x="1200" y="40" class="log-timing">PerformanceTracker.ts:51</text>
  </g>
  
  <!-- Beat 2 Started -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="60" class="tree-expand">▼</text>
    <text x="40" y="60" class="log-beat">🎵 Beat 2 Started: Generate Sections (control:panel:ui:sections:generate)</text>
    <text x="1200" y="60" class="log-timing">EventLogger.ts:139</text>
  </g>
  
  <!-- Sequence details -->
  <g class="terminal-text" font-size="11">
    <text x="60" y="80" class="tree-line">🎼</text>
    <text x="80" y="80" class="log-sequence">Sequence: Control Panel UI Render</text>
    <text x="1200" y="80" class="log-timing">EventLogger.ts:140</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="100" class="tree-line">🎵</text>
    <text x="80" y="100" class="log-movement">Movement: Movement 1</text>
    <text x="1200" y="100" class="log-timing">EventLogger.ts:144</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="120" class="tree-line">📊</text>
    <text x="80" y="120" class="log-beat">Beat: 2</text>
    <text x="1200" y="120" class="log-timing">EventLogger.ts:148</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="140" class="tree-line">🎯</text>
    <text x="80" y="140" class="log-event">Event: control:panel:ui:sections:generate</text>
    <text x="1200" y="140" class="log-timing">EventLogger.ts:152</text>
  </g>
  
  <!-- Collapsed event details -->
  <g class="terminal-text" font-size="11">
    <text x="80" y="160" class="tree-expand">▶</text>
    <text x="100" y="160" class="log-debug">{sequence: 'Control Panel UI Render', movement: 'Movement 1', beat: 2, type: 'UNKNOWN', timing: 'immediate', ...}</text>
    <text x="1200" y="160" class="log-timing">EventLogger.ts:158</text>
  </g>
  
  <!-- DataBaton updates -->
  <g class="terminal-text" font-size="11">
    <text x="60" y="180" class="tree-line">🎽</text>
    <text x="80" y="180" class="log-data">DataBaton: +sections | seq=Control Panel UI Render beat=? event=control:panel:ui:sections:generate handler=generateSections plugin=ControlPanelPlugin</text>
    <text x="1200" y="180" class="log-data">DataBaton.ts:114</text>
  </g>
  
  <!-- Request ID and preview -->
  <g class="terminal-text" font-size="10">
    <text x="100" y="200" class="log-correlation">req=control-panel-ui-render-symphony-1756811788221-e0u1pnaxw preview={"sections":[]}</text>
  </g>
  
  <!-- No changes -->
  <g class="terminal-text" font-size="11">
    <text x="60" y="220" class="tree-line">🎽</text>
    <text x="80" y="220" class="log-debug">DataBaton: No changes | seq=Control Panel UI Render beat=2 event=control:panel:ui:sections:generate handler=?</text>
    <text x="1200" y="220" class="log-data">DataBaton.ts:88</text>
  </g>
  
  <!-- Performance completion -->
  <g class="terminal-text" font-size="11">
    <text x="40" y="240" class="tree-line">●</text>
    <text x="60" y="240" class="log-timing">⏱️ PerformanceTracker: Beat 2 completed in 14.50ms</text>
    <text x="1200" y="240" class="log-timing">PerformanceTracker.ts:95</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="40" y="260" class="tree-line">✅</text>
    <text x="60" y="260" class="log-success">Completed in 14.50ms</text>
    <text x="1200" y="260" class="log-timing">EventLogger.ts:182</text>
  </g>
  
  <!-- Beat completion -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="280" class="tree-line">✅</text>
    <text x="40" y="280" class="log-success">BeatExecutor: Beat 2 (control:panel:ui:sections:generate) completed in 14ms</text>
    <text x="1200" y="280" class="log-success">BeatExecutor.ts:135</text>
  </g>
  
  <!-- Next beat execution -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="300" class="tree-expand">▼</text>
    <text x="40" y="300" class="log-debug">🎥 MovementExecutor: Executing beat 3 (3/3)</text>
    <text x="1200" y="300" class="log-timing">MovementExecutor.ts:81</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="40" y="320" class="tree-line">●</text>
    <text x="60" y="320" class="log-timing">⏱️ PerformanceTracker: Started timing beat 3 for Control Panel UI Render</text>
    <text x="1200" y="320" class="log-timing">PerformanceTracker.ts:51</text>
  </g>
  
  <!-- Beat 3 Started -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="340" class="tree-expand">▼</text>
    <text x="40" y="340" class="log-beat">🎵 Beat 3 Started: Render View (control:panel:ui:render)</text>
    <text x="1200" y="340" class="log-timing">EventLogger.ts:139</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="360" class="tree-line">🎼</text>
    <text x="80" y="360" class="log-sequence">Sequence: Control Panel UI Render</text>
    <text x="1200" y="360" class="log-timing">EventLogger.ts:140</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="380" class="tree-line">🎵</text>
    <text x="80" y="380" class="log-movement">Movement: Movement 1</text>
    <text x="1200" y="380" class="log-timing">EventLogger.ts:144</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="400" class="tree-line">📊</text>
    <text x="80" y="400" class="log-beat">Beat: 3</text>
    <text x="1200" y="400" class="log-timing">EventLogger.ts:148</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="420" class="tree-line">🎯</text>
    <text x="80" y="420" class="log-event">Event: control:panel:ui:render</text>
    <text x="1200" y="420" class="log-timing">EventLogger.ts:152</text>
  </g>
  
  <!-- Collapsed event details -->
  <g class="terminal-text" font-size="11">
    <text x="80" y="440" class="tree-expand">▶</text>
    <text x="100" y="440" class="log-debug">{sequence: 'Control Panel UI Render', movement: 'Movement 1', beat: 3, type: 'UNKNOWN', timing: 'immediate', ...}</text>
    <text x="1200" y="440" class="log-timing">EventLogger.ts:158</text>
  </g>
  
  <!-- DataBaton render completion -->
  <g class="terminal-text" font-size="11">
    <text x="60" y="460" class="tree-line">🎽</text>
    <text x="80" y="460" class="log-data">DataBaton: +viewRendered,renderTimestamp | seq=Control Panel UI Render beat=? event=control:panel:ui:render handler=renderView plugin=ControlPanelPlugin</text>
    <text x="1200" y="460" class="log-data">DataBaton.ts:114</text>
  </g>
  
  <g class="terminal-text" font-size="10">
    <text x="100" y="480" class="log-correlation">req=control-panel-ui-render-symphony-1756811788221-e0u1pnaxw preview={"viewRendered":true,"renderTimestamp":1756811788259}</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="60" y="500" class="tree-line">🎽</text>
    <text x="80" y="500" class="log-debug">DataBaton: No changes | seq=Control Panel UI Render beat=3 event=control:panel:ui:render handler=?</text>
    <text x="1200" y="500" class="log-data">DataBaton.ts:88</text>
  </g>
  
  <!-- Beat 3 completion -->
  <g class="terminal-text" font-size="11">
    <text x="40" y="520" class="tree-line">●</text>
    <text x="60" y="520" class="log-timing">⏱️ PerformanceTracker: Beat 3 completed in 10.00ms</text>
    <text x="1200" y="520" class="log-timing">PerformanceTracker.ts:95</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="40" y="540" class="tree-line">✅</text>
    <text x="60" y="540" class="log-success">Completed in 10.00ms</text>
    <text x="1200" y="540" class="log-timing">EventLogger.ts:182</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="20" y="560" class="tree-line">✅</text>
    <text x="40" y="560" class="log-success">BeatExecutor: Beat 3 (control:panel:ui:render) completed in 10ms</text>
    <text x="1200" y="560" class="log-success">BeatExecutor.ts:135</text>
  </g>
  
  <!-- Movement completion -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="580" class="tree-line">⏱️</text>
    <text x="40" y="580" class="log-timing">PerformanceTracker: Movement Render completed in 38.00ms</text>
    <text x="1200" y="580" class="log-timing">PerformanceTracker.ts:189</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="20" y="600" class="tree-line">✅</text>
    <text x="40" y="600" class="log-success">Movement completed in 38.00ms</text>
    <text x="1200" y="600" class="log-timing">EventLogger.ts:222</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="20" y="620" class="tree-line">🎥</text>
    <text x="40" y="620" class="log-beat">Beats executed: 3</text>
    <text x="1200" y="620" class="log-timing">EventLogger.ts:233</text>
  </g>
  
  <!-- Movement success -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="640" class="tree-line">✅</text>
    <text x="40" y="640" class="log-success">MovementExecutor: Movement "Render" completed successfully</text>
    <text x="1200" y="640" class="log-success">MovementExecutor.ts:122</text>
  </g>
  
  <!-- Queue completion -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="660" class="tree-line">🎼</text>
    <text x="40" y="660" class="log-debug">ExecutionQueue: Marked "Control Panel UI Render" as completed (Total completed: 5)</text>
    <text x="1200" y="660" class="log-debug">ExecutionQueue.ts:140</text>
  </g>
  
  <!-- Sequence completion -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="680" class="tree-line">✅</text>
    <text x="40" y="680" class="log-success">SequenceExecutor: Sequence "Control Panel UI Render" completed in 39ms</text>
    <text x="1200" y="680" class="log-success">SequenceExecutor.ts:145</text>
  </g>
  
  <!-- Final data update -->
  <g class="terminal-text" font-size="11">
    <text x="20" y="700" class="tree-line">🎽</text>
    <text x="40" y="700" class="log-data">DataBaton: +components,count | seq=Library Load beat=? event=library:components:load handler=loadComponents plugin=LibraryPlugin req=library-load-symphony-1756811788010-e4x0mn2sc preview={"components":[{"id":"json-button","name":"Button","template":{"tag":"button","text":"Click me","classes":["rx-comp","rx-button"],"css":".rx-button { background-color: var(--bg-color); color: var(--te</text>
    <text x="1200" y="700" class="log-data">DataBaton.ts:114</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="20" y="720" class="tree-line">🎽</text>
    <text x="40" y="720" class="log-debug">DataBaton: No changes | seq=Library Load beat=? event=library:components:notify-ui handler=notifyUi</text>
    <text x="1200" y="720" class="log-data">DataBaton.ts:88</text>
  </g>
  
  <!-- Title and summary -->
  <rect x="10" y="750" width="1380" height="140" rx="8" fill="#2d2d30" stroke="#3c3c3c" stroke-width="1"/>
  
  <text x="20" y="770" class="terminal-text log-sequence" font-size="14" font-weight="bold">
    🎼 Musical Conductor Traceability Dashboard
  </text>
  
  <text x="20" y="795" class="terminal-text log-success" font-size="12">
    Complete end-to-end traceability with correlation IDs, performance metrics, and hierarchical logging
  </text>
  
  <g class="terminal-text" font-size="11">
    <text x="30" y="820" class="log-timing">• Hierarchical beat execution with full context</text>
    <text x="30" y="840" class="log-data">• DataBaton state changes tracked across plugins</text>
    <text x="30" y="860" class="log-correlation">• Correlation IDs enable cross-plugin sequence tracing</text>
    <text x="30" y="880" class="log-success">• Performance metrics at every execution level</text>
  </g>
  
  <g class="terminal-text" font-size="11">
    <text x="450" y="820" class="log-sequence">• Sequence/Movement/Beat hierarchy preserved</text>
    <text x="450" y="840" class="log-event">• Event-driven architecture fully observable</text>
    <text x="450" y="860" class="log-debug">• Plugin interactions captured with full context</text>
    <text x="450" y="880" class="log-timing">• Real-time debugging and performance analysis</text>
  </g>
</svg>