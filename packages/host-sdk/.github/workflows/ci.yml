name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting (if available)
      run: npm run lint --if-present
    
    - name: Run tests
      run: npm test
    
    - name: Run build
      run: npm run build
    
    - name: Check build artifacts
      run: |
        if [ ! -d "dist" ]; then
          echo "Build failed - dist directory not found"
          exit 1
        fi
      shell: bash
    
    - name: Upload coverage reports (if available)
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      with:
        fail_ci_if_error: false

  publish-check:
    name: Publish Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build package
      run: npm run build
    
    - name: Check package contents
      run: npm pack --dry-run
    
    - name: Verify package.json
      run: |
        node -e "
          const pkg = require('./package.json');
          if (!pkg.name || !pkg.version || !pkg.main || !pkg.types) {
            console.error('Missing required package.json fields');
            process.exit(1);
          }
          console.log('Package validation passed');
        "

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit (production dependencies)
      run: npm audit --omit=dev --audit-level=moderate

    - name: Run security audit (all dependencies - informational)
      run: npm audit --audit-level=high || echo "Development dependency vulnerabilities found - review manually"
      continue-on-error: true
