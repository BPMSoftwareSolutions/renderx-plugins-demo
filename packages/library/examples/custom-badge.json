{
  "metadata": {
    "type": "custom-badge",
    "name": "Badge",
    "version": "1.0.0",
    "author": "Custom Components",
    "description": "A badge component for displaying status or counts",
    "category": "custom",
    "tags": ["badge", "label", "status", "ui"]
  },
  "ui": {
    "template": "<span class=\"rx-custom-badge rx-custom-badge--{{variant}}\">{{#if icon}}<span class=\"badge-icon\">{{icon}}</span>{{/if}}{{text}}</span>",
    "styles": {
      "css": ".rx-custom-badge { display: inline-flex; align-items: center; gap: 6px; background: var(--badge-bg, #007bff); color: var(--badge-color, #ffffff); padding: var(--badge-padding, 4px 12px); border-radius: var(--badge-border-radius, 12px); font-size: var(--badge-font-size, 12px); font-weight: 600; text-transform: uppercase; letter-spacing: 0.5px; line-height: 1; transition: all 0.2s ease; } .rx-custom-badge .badge-icon { font-size: 14px; line-height: 1; } .rx-custom-badge--primary { --badge-bg: #007bff; --badge-color: #ffffff; } .rx-custom-badge--secondary { --badge-bg: #6c757d; --badge-color: #ffffff; } .rx-custom-badge--success { --badge-bg: #28a745; --badge-color: #ffffff; } .rx-custom-badge--danger { --badge-bg: #dc3545; --badge-color: #ffffff; } .rx-custom-badge--warning { --badge-bg: #ffc107; --badge-color: #212529; } .rx-custom-badge--info { --badge-bg: #17a2b8; --badge-color: #ffffff; }",
      "variables": {
        "badge-bg": "#007bff",
        "badge-color": "#ffffff",
        "badge-padding": "4px 12px",
        "badge-border-radius": "12px",
        "badge-font-size": "12px"
      },
      "library": {
        "variables": {
          "badge-bg": "linear-gradient(135deg, #667eea, #764ba2)",
          "badge-color": "#ffffff",
          "badge-padding": "6px 14px",
          "badge-border-radius": "14px",
          "badge-font-size": "11px",
          "rx-icon-size": "14px"
        },
        "css": ".rx-lib .rx-custom-badge { display: inline-flex; align-items: center; gap: 6px; padding: var(--badge-padding, 6px 14px); border-radius: var(--badge-border-radius, 14px); background: var(--badge-bg); color: var(--badge-color); font-size: var(--badge-font-size, 11px); font-weight: 600; text-transform: uppercase; letter-spacing: 0.8px; transition: transform 0.2s ease, box-shadow 0.2s ease; box-shadow: 0 2px 4px rgba(0,0,0,0.15); cursor: pointer; } .rx-lib .rx-custom-badge .badge-icon { font-size: var(--rx-icon-size, 14px); } .rx-lib .rx-custom-badge:hover { transform: scale(1.05); box-shadow: 0 3px 8px rgba(0,0,0,0.2); }"
      }
    },
    "icon": {
      "mode": "emoji",
      "value": "üè∑Ô∏è",
      "position": "start"
    },
    "tools": {
      "drag": { "enabled": true },
      "resize": {
        "enabled": true,
        "handles": ["nw", "n", "ne", "e", "se", "s", "sw", "w"],
        "constraints": { "min": { "w": 60, "h": 24 } }
      }
    }
  },
  "integration": {
    "properties": {
      "schema": {
        "text": {
          "type": "string",
          "default": "New",
          "description": "Badge text content",
          "required": true
        },
        "variant": {
          "type": "string",
          "default": "primary",
          "description": "Badge style variant",
          "enum": ["primary", "secondary", "success", "danger", "warning", "info"]
        },
        "icon": {
          "type": "string",
          "default": "",
          "description": "Optional icon (emoji or text)"
        }
      },
      "defaultValues": {
        "text": "New",
        "variant": "primary",
        "icon": ""
      }
    },
    "canvasIntegration": {
      "resizable": true,
      "draggable": true,
      "selectable": true,
      "minWidth": 60,
      "minHeight": 24,
      "maxWidth": 300,
      "maxHeight": 60,
      "defaultWidth": 80,
      "defaultHeight": 28,
      "snapToGrid": true,
      "allowChildElements": false
    },
    "events": {
      "click": {
        "description": "Triggered when the badge is clicked",
        "parameters": ["event", "elementData"]
      }
    }
  },
  "interactions": {
    "canvas.component.create": {
      "pluginId": "CanvasComponentPlugin",
      "sequenceId": "canvas-component-create-symphony"
    },
    "canvas.component.select": {
      "pluginId": "CanvasComponentSelectionPlugin",
      "sequenceId": "canvas-component-select-symphony"
    },
    "canvas.component.drag.move": {
      "pluginId": "CanvasComponentDragPlugin",
      "sequenceId": "canvas-component-drag-symphony"
    },
    "canvas.component.resize.start": {
      "pluginId": "CanvasComponentResizeStartPlugin",
      "sequenceId": "canvas-component-resize-start-symphony"
    },
    "canvas.component.resize.move": {
      "pluginId": "CanvasComponentResizeMovePlugin",
      "sequenceId": "canvas-component-resize-move-symphony"
    },
    "canvas.component.resize.end": {
      "pluginId": "CanvasComponentResizeEndPlugin",
      "sequenceId": "canvas-component-resize-end-symphony"
    }
  }
}

