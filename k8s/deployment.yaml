apiVersion: apps/v1
kind: Deployment
metadata:
  name: renderx-plugins-demo
  labels:
    app: renderx-plugins-demo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: renderx-plugins-demo
  template:
    metadata:
      labels:
        app: renderx-plugins-demo
    spec:
      containers:
      - name: renderx-host
        image: bpmsoftwaresolutions/renderx-plugins-demo:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5173
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "debug"
        - name: RENDERX_DISABLE_STARTUP_VALIDATION
          valueFrom:
            configMapKeyRef:
              name: renderx-config
              key: disable-startup-validation
        - name: RENDERX_DISABLE_INTEGRITY
          valueFrom:
            configMapKeyRef:
              name: renderx-config
              key: disable-integrity
        - name: RENDERX_VALIDATION_STRICT
          valueFrom:
            configMapKeyRef:
              name: renderx-config
              key: validation-strict
        livenessProbe:
          httpGet:
            path: /health
            port: 5173
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 5173
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: artifacts
          mountPath: /app/artifacts
          readOnly: true
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: artifacts
        configMap:
          name: renderx-artifacts
      - name: logs
        emptyDir: {}