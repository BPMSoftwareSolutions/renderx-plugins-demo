{
  "version": "1.0.0",
  "topics": {
    "canvas.component.created": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Emitted when a canvas component has been created."
    },
    "canvas.component.drag.start": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        }
      },
      "visibility": "internal",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Drag start signal; useful for subscribers; no routing."
    },
    "canvas.component.drag.move": {
      "routes": [
        {
          "pluginId": "CanvasComponentDragPlugin",
          "sequenceId": "canvas-component-drag-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            },
            "required": [
              "x",
              "y"
            ]
          },
          "event": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "position"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {
        "throttleMs": 16
      },
      "notes": "Canvas component dragging movement updates; throttled to animation frame cadence."
    },
    "canvas.component.drag.end": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            }
          },
          "correlationId": {
            "type": "string"
          }
        }
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Drag ended; subscribers may trigger post-drag behavior (e.g., render)."
    },
    "canvas.component.selection.changed": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-selection-show-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Selection changed; routes to control panel selection show."
    },
    "canvas.component.import.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentImportPlugin",
          "sequenceId": "canvas-component-import-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "User initiated canvas import; routes to import sequence."
    },
    "canvas.component.import.started": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "size": {
            "type": "number"
          }
        },
        "required": [
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Import started; subscribers may show progress UI."
    },
    "canvas.component.import.completed": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "components": {
            "type": "number"
          }
        },
        "required": [
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Import completed; subscribers may hide progress and refresh views."
    },
    "canvas.component.resize.start": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeStartPlugin",
          "sequenceId": "canvas-component-resize-start-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "startLeft": {
            "type": "number"
          },
          "startTop": {
            "type": "number"
          },
          "startWidth": {
            "type": "number"
          },
          "startHeight": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Resize started; routes to resize start sequence."
    },
    "canvas.component.resize.move": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeMovePlugin",
          "sequenceId": "canvas-component-resize-move-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "startLeft": {
            "type": "number"
          },
          "startTop": {
            "type": "number"
          },
          "startWidth": {
            "type": "number"
          },
          "startHeight": {
            "type": "number"
          },
          "dx": {
            "type": "number"
          },
          "dy": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Resize move; routes to resize move sequence with throttling for performance."
    },
    "canvas.component.resize.end": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeEndPlugin",
          "sequenceId": "canvas-component-resize-end-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "startLeft": {
            "type": "number"
          },
          "startTop": {
            "type": "number"
          },
          "startWidth": {
            "type": "number"
          },
          "startHeight": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Resize ended; routes to resize end sequence."
    },
    "control.panel.update.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-update-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            }
          },
          "size": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number"
              },
              "height": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel update requested; routes to update sequence with throttling."
    },
    "canvas.component.create.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentPlugin",
          "sequenceId": "canvas-component-create-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "component": {
            "type": "object"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            },
            "required": [
              "x",
              "y"
            ]
          },
          "containerId": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        },
        "required": [
          "component",
          "position",
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "User requests creation of a component at a position (optionally inside container)."
    }
  }
}
