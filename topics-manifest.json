{
  "version": "1.0.0",
  "topics": {
    "canvas.component.create.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentPlugin",
          "sequenceId": "canvas-component-create-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/create.json"
    },
    "canvas.component.created": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Emitted when a canvas component has been created."
    },
    "canvas.component.drag.start": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        }
      },
      "visibility": "internal",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Drag start signal; useful for subscribers; no routing."
    },
    "canvas.component.drag.move": {
      "routes": [
        {
          "pluginId": "CanvasComponentDragPlugin",
          "sequenceId": "canvas-component-drag-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            },
            "required": [
              "x",
              "y"
            ]
          },
          "event": {
            "type": "string"
          },
          "correlationId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "position"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {
        "throttleMs": 16
      },
      "notes": "Canvas component dragging movement updates; throttled to animation frame cadence."
    },
    "canvas.component.drag.end": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            }
          },
          "correlationId": {
            "type": "string"
          }
        }
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Drag ended; subscribers may trigger post-drag behavior (e.g., render)."
    },
    "canvas.component.select.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentPlugin",
          "sequenceId": "canvas-component-select-requested-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/select.requested.json"
    },
    "canvas.component.deselect.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentDeselectionRequestPlugin",
          "sequenceId": "canvas-component-deselect-requested-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/deselect.requested.json"
    },
    "canvas.component.selection.changed": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-selection-show-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Selection changed; routes to control panel selection show."
    },
    "canvas.component.import.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentImportPlugin",
          "sequenceId": "canvas-component-import-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/import.json"
    },
    "canvas.component.import.started": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "size": {
            "type": "number"
          }
        },
        "required": [
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Import started; subscribers may show progress UI."
    },
    "canvas.component.import.completed": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "components": {
            "type": "number"
          }
        },
        "required": [
          "correlationId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [
        "correlationId"
      ],
      "perf": {},
      "notes": "Import completed; subscribers may hide progress and refresh views."
    },
    "canvas.component.resize.start": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeStartPlugin",
          "sequenceId": "canvas-component-resize-start-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "startLeft": {
            "type": "number"
          },
          "startTop": {
            "type": "number"
          },
          "startWidth": {
            "type": "number"
          },
          "startHeight": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Resize started; routes to resize start sequence."
    },
    "canvas.component.resize.move": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeMovePlugin",
          "sequenceId": "canvas-component-resize-move-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "startLeft": {
            "type": "number"
          },
          "startTop": {
            "type": "number"
          },
          "startWidth": {
            "type": "number"
          },
          "startHeight": {
            "type": "number"
          },
          "dx": {
            "type": "number"
          },
          "dy": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Resize move; routes to resize move sequence with throttling for performance."
    },
    "canvas.component.resize.end": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeEndPlugin",
          "sequenceId": "canvas-component-resize-end-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "startLeft": {
            "type": "number"
          },
          "startTop": {
            "type": "number"
          },
          "startWidth": {
            "type": "number"
          },
          "startHeight": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Resize ended; routes to resize end sequence."
    },
    "canvas.component.update.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentPlugin",
          "sequenceId": "canvas-component-update-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/update.json"
    },
    "canvas.component.resize.line.start": {
      "routes": [
        {
          "pluginId": "CanvasLineResizeStartPlugin",
          "sequenceId": "canvas-line-resize-start-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "dx": {
            "type": "number"
          },
          "dy": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "handle",
          "phase"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Line resize started; routes to line resize start sequence."
    },
    "canvas.component.resize.line.move": {
      "routes": [
        {
          "pluginId": "CanvasLineResizeMovePlugin",
          "sequenceId": "canvas-line-resize-move-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "dx": {
            "type": "number"
          },
          "dy": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "handle",
          "dx",
          "dy",
          "phase"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Line resize move; routes to line resize move sequence with throttling for performance."
    },
    "canvas.component.resize.line.end": {
      "routes": [
        {
          "pluginId": "CanvasLineResizeEndPlugin",
          "sequenceId": "canvas-line-resize-end-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "dx": {
            "type": "number"
          },
          "dy": {
            "type": "number"
          },
          "phase": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "handle",
          "phase"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Line resize ended; routes to line resize end sequence."
    },
    "canvas.component.select.svg-node.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentSvgNodeSelectionPlugin",
          "sequenceId": "canvas-component-select-svg-node-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "path"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control Panel SvgTreeView click → highlight sub-element in canvas"
    },
    "canvas.component.select.svg-node.changed": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "path"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Notify-only: emitted by canvas after applying sub-node selection so UI (control panel) can sync selection state"
    },
    "canvas.component.update.svg-node.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentSvgNodeUpdatePlugin",
          "sequenceId": "canvas-component-update-svg-node-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "value": {}
        },
        "required": [
          "id",
          "path",
          "attribute"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Update an attribute on an SVG sub-node within a canvas component; routes to SVG node update sequence."
    },
    "control.panel.update.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-update-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "position": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            }
          },
          "size": {
            "type": "object",
            "properties": {
              "width": {
                "type": "number"
              },
              "height": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel update requested; routes to update sequence with throttling."
    },
    "control.panel.ui.render.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-ui-render-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "selectedElement": {
            "type": "object"
          }
        }
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel UI render requested; routes to render sequence with throttling for performance."
    },
    "control.panel.ui.field.change.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-ui-field-change-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "fieldKey": {
            "type": "string"
          },
          "value": {},
          "selectedElement": {
            "type": "object"
          }
        },
        "required": [
          "fieldKey",
          "selectedElement"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {
        "debounceMs": 250
      },
      "notes": "Control panel field change requested; routes to field change sequence with throttling."
    },
    "control.panel.ui.field.validate.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-ui-field-validate-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "fieldKey": {
            "type": "string"
          },
          "value": {},
          "selectedElement": {
            "type": "object"
          }
        },
        "required": [
          "fieldKey",
          "selectedElement"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel field validation requested; routes to validation sequence with throttling."
    },
    "control.panel.ui.section.toggle.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-ui-section-toggle-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "sectionId": {
            "type": "string"
          }
        },
        "required": [
          "sectionId"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel section toggle requested; routes to section toggle sequence."
    },
    "control.panel.classes.add.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-classes-add-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "className": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "className"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel add class requested; routes to add class sequence."
    },
    "control.panel.classes.remove.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-classes-remove-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "className": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "className"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel remove class requested; routes to remove class sequence."
    },
    "control.panel.css.create.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-css-create-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "className": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "className",
          "content"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel create CSS class requested; routes to CSS create sequence."
    },
    "control.panel.css.edit.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-css-edit-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "className": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "className",
          "content"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel edit CSS class requested; routes to CSS edit sequence."
    },
    "control.panel.css.delete.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-css-delete-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "className": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "className"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel delete CSS class requested; routes to CSS delete sequence."
    },
    "control.panel.selection.show.requested": {
      "routes": [
        {
          "pluginId": "ControlPanelPlugin",
          "sequenceId": "control-panel-selection-show-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel selection show requested; routes to selection show sequence."
    },
    "control.panel.selection.updated": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "header": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "layout": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              },
              "width": {
                "type": "number"
              },
              "height": {
                "type": "number"
              }
            }
          }
        }
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel selection model updated; published for UI consumption."
    },
    "control.panel.classes.updated": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "classes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel classes updated; published for UI consumption."
    },
    "control.panel.css.registry.updated": {
      "routes": [],
      "payloadSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "className": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          }
        }
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Control panel CSS registry updated; published for UI consumption."
    },
    "library.load.requested": {
      "routes": [
        {
          "pluginId": "LibraryPlugin",
          "sequenceId": "library-load-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from library/library-load.json"
    },
    "library.component.drag.start.requested": {
      "routes": [
        {
          "pluginId": "LibraryComponentPlugin",
          "sequenceId": "library-component-drag-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from library-component/drag.json"
    },
    "library.component.drop.requested": {
      "routes": [
        {
          "pluginId": "LibraryComponentPlugin",
          "sequenceId": "library-component-drop-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from library-component/drop.json"
    },
    "test.route": {
      "routes": [
        {
          "pluginId": "P1",
          "sequenceId": "S1"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "internal",
      "correlationKeys": [],
      "perf": {},
      "notes": "Test topic for routing tests"
    },
    "test.notify": {
      "routes": [],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "internal",
      "correlationKeys": [],
      "perf": {},
      "notes": "Test topic for notification-only tests"
    },
    "library.container.drop.requested": {
      "routes": [
        {
          "pluginId": "LibraryComponentPlugin",
          "sequenceId": "library-component-container-drop-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from library-component/container.drop.json"
    },
    "canvas.component.delete.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentDeleteRequestPlugin",
          "sequenceId": "canvas-component-delete-requested-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/delete.requested.json"
    },
    "canvas.component.deselect.all.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentDeselectionPlugin",
          "sequenceId": "canvas-component-deselect-all-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/deselect-all.json"
    },
    "canvas.component.drag.start.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentDragPlugin",
          "sequenceId": "canvas-component-drag-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/drag.json"
    },
    "canvas.component.export.gif.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentExportGifPlugin",
          "sequenceId": "canvas-component-export-gif-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/export-gif.json"
    },
    "canvas.component.export.mp4.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentExportMp4Plugin",
          "sequenceId": "canvas-component-export-mp4-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/export-mp4.json"
    },
    "canvas.component.export.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentExportPlugin",
          "sequenceId": "canvas-component-export-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/export.json"
    },
    "canvas.line.manip.end.requested": {
      "routes": [
        {
          "pluginId": "CanvasLineManipEndPlugin",
          "sequenceId": "canvas-line-manip-end-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/line.manip.end.json"
    },
    "canvas.line.manip.move.requested": {
      "routes": [
        {
          "pluginId": "CanvasLineManipMovePlugin",
          "sequenceId": "canvas-line-manip-move-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/line.manip.move.json"
    },
    "canvas.line.manip.start.requested": {
      "routes": [
        {
          "pluginId": "CanvasLineManipStartPlugin",
          "sequenceId": "canvas-line-manip-start-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/line.manip.start.json"
    },
    "canvas.component.resize.end.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeEndPlugin",
          "sequenceId": "canvas-component-resize-end-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/resize.end.json"
    },
    "canvas.line.resize.end.requested": {
      "routes": [
        {
          "pluginId": "CanvasLineResizeEndPlugin",
          "sequenceId": "canvas-line-resize-end-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/resize.line.end.json"
    },
    "canvas.line.resize.move.requested": {
      "routes": [
        {
          "pluginId": "CanvasLineResizeMovePlugin",
          "sequenceId": "canvas-line-resize-move-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/resize.line.move.json"
    },
    "canvas.line.resize.start.requested": {
      "routes": [
        {
          "pluginId": "CanvasLineResizeStartPlugin",
          "sequenceId": "canvas-line-resize-start-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/resize.line.start.json"
    },
    "canvas.component.resize.move.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeMovePlugin",
          "sequenceId": "canvas-component-resize-move-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/resize.move.json"
    },
    "canvas.component.resize.start.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentResizeStartPlugin",
          "sequenceId": "canvas-component-resize-start-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/resize.start.json"
    },
    "canvas.component.select.svg.node.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentSvgNodeSelectionPlugin",
          "sequenceId": "canvas-component-select-svg-node-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/select.svg-node.json"
    },
    "canvas.component.update.svg.node.requested": {
      "routes": [
        {
          "pluginId": "CanvasComponentSvgNodeUpdatePlugin",
          "sequenceId": "canvas-component-update-svg-node-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from canvas-component/update.svg-node.json"
    },
    "app.ui.theme.get": {
      "routes": [
        {
          "pluginId": "HeaderThemePlugin",
          "sequenceId": "header-ui-theme-get-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from header/ui.theme.get.json"
    },
    "app.ui.theme.toggle": {
      "routes": [
        {
          "pluginId": "HeaderThemePlugin",
          "sequenceId": "header-ui-theme-toggle-symphony"
        }
      ],
      "payloadSchema": {
        "type": "object"
      },
      "visibility": "public",
      "correlationKeys": [],
      "perf": {},
      "notes": "Auto-derived from header/ui.theme.toggle.json"
    }
  }
}
